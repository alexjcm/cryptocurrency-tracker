{"version":3,"sources":["utils/Utils.js","chartOptions/chartOptions.js","components/ChartData.js","components/MiniCard.js","components/CryptocurrencyData.js","api/cryptocurrencyApi.js","components/Loader.js","pages/CryptocurrencyDetail.js","context/watchListContext.js","components/AddCryptocurrency.js","components/Cryptocurrency.js","components/CryptocurrencyList.js","pages/CryptocurrencySummary.js","components/Header.js","App.js","index.js"],"names":["formatDate","date","format","Date","options","animation","duration","maintainAspectRatio","responsive","parsing","xAxisKey","yAxisKey","scales","x","type","display","title","text","ticks","major","enabled","y","callback","value","interaction","intersect","mode","plugins","legend","labels","usePointStyle","tooltips","custom","model","body","tooltip","document","getElementById","style","left","caretX","top","caretY","querySelector","textContent","dataPoints","label","chartStyles","borderColor","backgroundColor","opacity","alpha","undefined","colorLib","rgbString","transparentize","fill","target","above","below","borderWidth","pointRadius","pointStyle","pointBorderColor","ChartData","data","ctxChartRef","useRef","day","week","year","detail","useState","timeFormat","setTimeFormat","determineTimeFormat","Chart","register","LineController","LineElement","LinearScale","PointElement","TimeScale","useEffect","current","lineChart","datasets","name","destroy","className","current_price","toFixed","price_change_24h","price_change_percentage_24h","renderPrice","ref","id","height","onClick","MiniCard","CryptocurrencyData","circulating_supply","ath","max_supply","ath_date","low_24h","market_cap","high_24h","last_updated","renderData","axios","create","baseURL","Loader","loading","color","radius","CryptocurrencyDetail","useParams","cryptocurrencyData","setCryptocurrencyData","isLoading","setIsLoading","formatData","map","el","time","price","a","Promise","all","cryptocurrencyApi","get","params","vs_currency","days","ids","prices","fetchData","WatchListContext","createContext","WatchListContextProvider","props","localStorage","getItem","split","watchList","setWatchList","setItem","Provider","deleteCryptocurrency","cryptocurrency","filter","addCryptocurrency","indexOf","children","AddCryptocurrency","isActive","setIsActive","useContext","href","Cryptocurrency","to","src","image","alt","symbol","toUpperCase","e","preventDefault","CryptocurrencyList","cryptocurrencies","setCryptocurrencies","join","response","length","CryptocurrencySummary","Header","size","App","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.fff77517.chunk.js","sourcesContent":["import colorLib from '@kurkle/color';\nimport { format } from 'date-fns'\n\nexport function transparentize(value, opacity) {\n  var alpha = opacity === undefined ? 0.5 : 1 - opacity;\n  return colorLib(value).alpha(alpha).rgbString();\n}\n\nexport const CHART_COLORS = {\n  red: 'rgb(255, 99, 132)',\n  orange: 'rgb(255, 159, 64)',\n  yellow: 'rgb(255, 205, 86)',\n  green: 'rgb(75, 192, 192)',\n  blue: 'rgb(54, 162, 235)',\n  purple: 'rgb(153, 102, 255)',\n  grey: 'rgb(201, 203, 207)',\n};\n\nexport function formatDate(date) {\n  return format(new Date(date), 'Pp')\n}\n","import {transparentize, CHART_COLORS} from '../utils/Utils.js';\n\nfunction processTooltipModel(model) {\n  if (!model.body) {\n    return;\n  }\n  const tooltip = document.getElementById('tooltip');\n  tooltip.style.left = model.caretX + 'px';\n  tooltip.style.top = model.caretY - 66 - 5 + 'px';\n  tooltip.style.display = 'block';\n  tooltip.querySelector('.tooltip-label').textContent =\n    model.dataPoints[0].label;\n  tooltip.querySelector('.tooltip-value .value').textContent =\n    '$' + model.dataPoints[0].value;\n}\n\nexport const options = {\n  animation: {\n    duration: 1500,\n  },\n  maintainAspectRatio: false,\n  responsive: true,\n  parsing: {\n    xAxisKey: 'time',\n    yAxisKey: 'price',\n  },\n  scales: {\n    x: {\n      type: 'time',\n      display: true,\n      title: {\n        display: true,\n        text: 'Date',\n      },\n      ticks: {\n        major: {\n          enabled: true,\n        },\n      },\n    },\n    y: {\n      title: {\n        display: true,\n        text: 'Price',\n      },\n      ticks: {\n        callback: (value) => {\n          return '$' + value;\n        },\n      },\n    },\n  },\n\n  //\n  interaction: {\n    intersect: false,\n    mode: 'index',\n  },\n  plugins: {\n    legend: {\n      labels: {\n        usePointStyle: true,\n      },\n    },\n    title: {\n      display: true,\n      text: 'Chart with Tick Configuration',\n    },\n    // tooltip: {\n    //   backgroundColor: CHART_COLORS.yellow,\n    //   borderColor: CHART_COLORS.yellow,\n    //   borderWidth: 1,\n    //   titleColor: 'black',\n    //   displayColors: true,\n    // },\n  },\n  tooltips: {\n    enabled: false,\n    custom: processTooltipModel,\n    intersect: false,\n    mode: 'index',\n  },\n};\n\nexport const chartStyles = {\n  borderColor: CHART_COLORS.green,\n  backgroundColor: transparentize(CHART_COLORS.red, 0.5),\n  fill: {\n    target: 'origin',\n    above: 'rgb(255, 0, 0)', // Area will be red above the origin\n    below: 'rgb(0, 0, 255)', // And blue below the origin\n  },\n  borderWidth: 2,\n  pointRadius: 0,\n  pointStyle: 'circle',\n  pointBorderColor: 'rgb(0, 0, 0)',\n};\n","import React, {useRef, useEffect, useState} from 'react';\n\nimport 'chartjs-adapter-date-fns';\nimport {\n  Chart,\n  TimeScale,\n  PointElement,\n  LineController,\n  LineElement,\n  LinearScale,\n} from 'chart.js';\n\nimport {chartStyles, options} from '../chartOptions/chartOptions';\n\nconst ChartData = ({data}) => {\n  const ctxChartRef = useRef();\n  const {day, week, year, detail} = data;\n  const [timeFormat, setTimeFormat] = useState('24h');\n\n  const determineTimeFormat = () => {\n    switch (timeFormat) {\n      case '24h':\n        return day;\n      case '7d':\n        return week;\n      case '1y':\n        return year;\n      default:\n        return day;\n    }\n  };\n\n  Chart.register(\n    LineController,\n    LineElement,\n    LinearScale,\n    PointElement,\n    TimeScale\n  );\n\n  useEffect(() => {\n    if (ctxChartRef && ctxChartRef.current && detail) {\n      const lineChart = new Chart(ctxChartRef.current, {\n        type: 'line',\n        data: {\n          datasets: [\n            {\n              label: `${detail.name} price`,\n              data: determineTimeFormat(),\n              ...chartStyles,\n            },\n          ],\n        },\n        options: {\n          ...options,\n        },\n      });\n      return () => {\n        lineChart.destroy();\n      };\n    }\n  });\n\n  const renderPrice = () => {\n    if (detail) {\n      return (\n        <>\n          <p className=\"my-0\">${detail.current_price.toFixed(2)}</p>\n          <p\n            className={\n              detail.price_change_24h < 0\n                ? 'text-danger my-0'\n                : 'text-success my-0'\n            }>\n            {detail.price_change_24h < 0 ? (\n              <i className=\"fas fa-sort-down align-middle\"></i>\n            ) : (\n              <i className=\"fas fa-sort-up align-middle\"></i>\n            )}\n            {detail.price_change_percentage_24h.toFixed(2)}%\n          </p>\n        </>\n      );\n    }\n  };\n  return (\n    <div className=\"bg-white border mt-2 rounded p-3\">\n      <div>{renderPrice()}</div>\n      <div>\n        <canvas ref={ctxChartRef} id=\"myChart\" height={250}></canvas>\n      </div>\n\n      <div className=\"chart-buttons\">\n        <button\n          onClick={() => setTimeFormat('24h')}\n          className=\"btn btn-outline-secondary btn-sm\">\n          24h\n        </button>\n        <button\n          onClick={() => setTimeFormat('7d')}\n          className=\"btn btn-outline-secondary btn-sm mx-1\">\n          1 week\n        </button>\n        <button\n          onClick={() => setTimeFormat('1y')}\n          className=\"btn btn-outline-secondary btn-sm\">\n          1 year\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChartData;\n","import React from 'react';\n\nconst MiniCard = ({title, data}) => {\n  return (\n    <>\n      <div className=\"d-flex flex-column\">\n        <span className=\"text-muted cryptocurrency-data-category\">{title}</span>\n        <span>{data}</span>\n      </div>\n    </>\n  );\n};\n\nexport default MiniCard;\n","import React from 'react';\n\nimport MiniCard from './MiniCard';\nimport {formatDate} from '../utils/Utils';\n\nconst CryptocurrencyData = ({data}) => {\n  const renderData = () => {\n    if (data) {\n      return (\n        <div className=\"cryptocurrency-data bg-white mt-2 p-2 rounded border row\">\n          <div className=\"col-sm\">\n            <MiniCard\n              title=\"Circulating Supply\"\n              data={data.circulating_supply}\n            />\n            <hr />\n            <MiniCard title=\"ATH (All-Time High)\" data={'$' + data.ath} />\n          </div>\n          <div className=\"col-sm\">\n            <MiniCard title=\"Max Supply\" data={data.max_supply} />\n            <hr />\n            <MiniCard title=\"ATH date\" data={formatDate(data.ath_date)} />\n          </div>\n          <div className=\"col-sm\">\n            <MiniCard title=\"Low 24h\" data={'$' + data.low_24h} />\n            <hr />\n            <MiniCard title=\"Market Cap\" data={data.market_cap} />\n          </div>\n          <div className=\"col-sm\">\n            <MiniCard title=\"High 24h\" data={'$' + data.high_24h} />\n            <hr />\n            <MiniCard\n              title=\"Last updated\"\n              data={formatDate(data.last_updated)}\n            />\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return <div>{renderData()}</div>;\n};\n\nexport default CryptocurrencyData;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.coingecko.com/api/v3',\n});\n","import {LineScaleParty} from 'react-pure-loaders';\n\nconst Loader = (loading) => {\n  return <LineScaleParty color={'#c5c2c2'} loading={loading} radius={200} />;\n};\n\nexport default Loader;\n","import React, {useEffect, useState} from 'react';\n\nimport {useParams} from 'react-router-dom';\n\nimport ChartData from '../components/ChartData';\nimport CryptocurrencyData from '../components/CryptocurrencyData';\nimport cryptocurrencyApi from '../api/cryptocurrencyApi';\nimport Loader from '../components/Loader';\n\nconst CryptocurrencyDetail = () => {\n  const {id} = useParams();\n  const [cryptocurrencyData, setCryptocurrencyData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const formatData = (data) => {\n    return data.map((el) => {\n      return {\n        time: el[0],\n        price: el[1].toFixed(2),\n      };\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const [day, week, year, detail] = await Promise.all([\n        cryptocurrencyApi.get(`/coins/${id}/market_chart/`, {\n          params: {\n            vs_currency: 'usd',\n            days: '1',\n          },\n        }),\n        cryptocurrencyApi.get(`/coins/${id}/market_chart/`, {\n          params: {\n            vs_currency: 'usd',\n            days: '7',\n          },\n        }),\n        cryptocurrencyApi.get(`/coins/${id}/market_chart/`, {\n          params: {\n            vs_currency: 'usd',\n            days: '365',\n          },\n        }),\n        cryptocurrencyApi.get('/coins/markets/', {\n          params: {\n            vs_currency: 'usd',\n            ids: id,\n          },\n        }),\n      ]);\n\n      setCryptocurrencyData({\n        day: formatData(day.data.prices),\n        week: formatData(week.data.prices),\n        year: formatData(year.data.prices),\n        detail: detail.data[0],\n      });\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [id]);\n\n  const renderData = () => {\n    if (isLoading) {\n      return <Loader loading={isLoading} />;\n    }\n    return (\n      <div className=\"cryptocurrencydetail\">\n        <ChartData data={cryptocurrencyData} />\n        <CryptocurrencyData data={cryptocurrencyData.detail} />\n      </div>\n    );\n  };\n\n  return renderData();\n};\n\nexport default CryptocurrencyDetail;\n","import React, {createContext, useState, useEffect} from 'react';\n\nexport const WatchListContext = createContext();\n\nexport const WatchListContextProvider = (props) => {\n  const [watchList, setWatchList] = useState(\n    localStorage.getItem('watchList')?.split(',') || [\n      'bitcoin',\n      'ethereum',\n      'bitcoin-cash',\n      'binancecoin',\n      'chainlink',\n      'ripple',\n      'okb',\n      'tether',\n      'litecoin',\n      'cardano',\n      'polkadot',\n      'solana',\n      'stellar',\n      'uniswap',  \n      'dogecoin',\n      'eos',  \n      'tezos',\n    ]\n  );\n\n  useEffect(() => {\n    localStorage.setItem('watchList', watchList);\n  }, [watchList]);\n\n  const deleteCryptocurrency = (cryptocurrency) => {\n    setWatchList(\n      watchList.filter((el) => {\n        return el !== cryptocurrency;\n      })\n    );\n  };\n\n  const addCryptocurrency = (cryptocurrency) => {\n    if (watchList.indexOf(cryptocurrency) === -1) {\n      setWatchList([...watchList, cryptocurrency]);\n    }\n  };\n\n  return (\n    <WatchListContext.Provider\n      value={{watchList, deleteCryptocurrency, addCryptocurrency}}>\n      {props.children}\n    </WatchListContext.Provider>\n  );\n};\n","import React, {useState, useContext} from 'react';\nimport {WatchListContext} from '../context/watchListContext';\n\nconst AddCryptocurrency = () => {\n  const [isActive, setIsActive] = useState(false);\n  const {addCryptocurrency} = useContext(WatchListContext);\n  const availableCryptocurrencies = [\n    'bitcoin',\n    'ethereum',\n    'bitcoin-cash',\n    'binancecoin',\n    'chainlink',\n    'ripple',\n    'okb',\n    'tether',\n    'litecoin',\n    'cardano',\n    'polkadot',\n    'solana',\n    'stellar',\n    'uniswap',  \n    'dogecoin',\n    'eos',  \n    'tezos',\n  ];\n\n  const handleClick = (cryptocurrency) => {\n    addCryptocurrency(cryptocurrency);\n    setIsActive(false);\n  };\n\n  return (\n    <div className=\"dropdown\">\n      <button\n        onClick={() => setIsActive(!isActive)}\n        className=\"btn btn-dark dropdown-toggle\"\n        type=\"button\">\n        Add Cryptocurrency\n      </button>\n      <div className={isActive ? 'dropdown-menu show' : 'dropdown-menu'}>\n        {availableCryptocurrencies.map((el) => {\n          return (\n            <a\n              key={el}\n              onClick={() => handleClick(el)}\n              href=\"/#\"\n              className=\"dropdown-item\">\n              {el}\n            </a>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default AddCryptocurrency;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Cryptocurrency = ({cryptocurrency, deleteCryptocurrency}) => {\n  return (\n    <Link\n      to={`/cryptocurrencies/${cryptocurrency.id}`}\n      className=\"text-decoration-none my-1 cryptocurrency\">\n      <li className=\"cryptocurrencylist-item list-group-item list-group-item-action align-items-center\">\n        <img\n          className=\"cryptocurrencylist-image\"\n          src={cryptocurrency.image}\n          alt=\"\"\n        />\n        <span className=\"cryptocurrency-text-name\">{cryptocurrency.name}</span>\n        <span className=\"cryptocurrency-text-symbol text-muted\">\n          {cryptocurrency.symbol.toUpperCase()}\n        </span>\n        <span className=\"cryptocurrency-text\">\n          {'$' + cryptocurrency.current_price}\n        </span>\n\n        <span\n          className={\n            cryptocurrency.price_change_percentage_24h < 0\n              ? 'text-danger cryptocurrency-text'\n              : 'text-success cryptocurrency-text'\n          }>\n          {' '}\n          {cryptocurrency.price_change_percentage_24h < 0 ? (\n            <i className=\"fas fa-sort-down align-middle\"></i>\n          ) : (\n            <i className=\"fas fa-sort-up align-middle\"></i>\n          )}\n          {cryptocurrency.price_change_percentage_24h + ' %'}\n        </span>\n\n        <span\n          className={\n            cryptocurrency.price_change_24h < 0\n              ? 'text-danger cryptocurrency-text'\n              : 'text-success cryptocurrency-text'\n          }>\n          {'$' + cryptocurrency.price_change_24h}\n        </span>\n\n        <i\n          className=\"delete-icon far fa-times-circle text-muted\"\n          onClick={(e) => {\n            e.preventDefault();\n            deleteCryptocurrency(cryptocurrency.id);\n          }}></i>\n      </li>\n    </Link>\n  );\n};\n\nexport default Cryptocurrency;\n","import React, {useEffect, useState, useContext} from 'react';\n\nimport cryptocurrencyApi from '../api/cryptocurrencyApi';\nimport {WatchListContext} from '../context/watchListContext';\nimport Cryptocurrency from './Cryptocurrency';\nimport Loader from './Loader';\n\nconst CryptocurrencyList = () => {\n  const [cryptocurrencies, setCryptocurrencies] = useState([]);\n  const {watchList, deleteCryptocurrency} = useContext(WatchListContext);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      // Use this to obtain all the coins market data (price, market cap, volume)\n      const response = await cryptocurrencyApi.get('/coins/markets/', {\n        params: {\n          vs_currency: 'usd',\n          ids: watchList.join(','),\n        },\n      });\n      setCryptocurrencies(response.data);\n      setIsLoading(false);\n    };\n\n    if (watchList.length > 0) {\n      fetchData();\n    } else setCryptocurrencies([]);\n  }, [watchList]);\n\n  const renderCryptocurrencies = () => {\n    if (isLoading) {\n      return <Loader />;\n    }\n\n    return (\n      <ul className=\"cryptocurrencylist list-group mt-2\">\n        <li className=\"cryptocurrencylist-item list-group-item list-group-item-action align-items-center\">\n          <span className=\"cryptocurrency-header text-bold\">Asset</span>\n          <span className=\"cryptocurrency-text-symbol text-bold\">Symbol</span>\n          <span className=\"cryptocurrency-text text-bold\">Market price</span>\n          <span className=\"cryptocurrency-text text-bold\">Price change % 24h</span>\n          <span className=\"cryptocurrency-text text-bold\">Price change $ 24h</span>     \n        </li>\n        {cryptocurrencies.map((cryptocurrency) => {\n          //console.log(cryptocurrencies);\n          return (\n            <Cryptocurrency\n              key={cryptocurrency.id}\n              cryptocurrency={cryptocurrency}\n              deleteCryptocurrency={deleteCryptocurrency}\n            />\n          );\n        })}\n      </ul>\n    );\n  };\n\n  return <div>{renderCryptocurrencies()}</div>;\n};\n\nexport default CryptocurrencyList;\n","import React from 'react';\n\nimport AddCryptocurrency from '../components/AddCryptocurrency';\nimport CryptocurrencyList from '../components/CryptocurrencyList';\n\nconst CryptocurrencySummary = () => {\n  return (\n    <div className=\"cryptocurrencysummary border p-2 rounded bg-light\">\n      <AddCryptocurrency />\n      <CryptocurrencyList />\n    </div>\n  );\n};\n\nexport default CryptocurrencySummary;\n","import React from 'react';\n\nimport {Link} from 'react-router-dom';\nimport {AiOutlineHome} from 'react-icons/ai';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <div>\n      <Link to={'/'} className=\"button-home\">\n        <AiOutlineHome size={32} />\n      </Link>\n      <h1 className=\"text-center headerCryptocurrency\">\n        World's most popular cryptocurrencies\n      </h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport {BrowserRouter, Route} from 'react-router-dom';\n\nimport CryptocurrencyDetail from './pages/CryptocurrencyDetail';\nimport CryptocurrencySummary from './pages/CryptocurrencySummary';\nimport Header from './components/Header';\nimport {WatchListContextProvider} from './context/watchListContext';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <WatchListContextProvider>\n        <BrowserRouter>\n          <Header />\n          <Route exact path=\"/\" component={CryptocurrencySummary} />\n          <Route\n            path=\"/cryptocurrencies/:id\"\n            component={CryptocurrencyDetail}\n          />\n        </BrowserRouter>\n      </WatchListContextProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}